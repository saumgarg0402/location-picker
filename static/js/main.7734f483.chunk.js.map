{"version":3,"sources":["components/LocationPicker.module.scss","utils/getSuggestions.ts","utils/mapSuggestions.ts","components/LocationPicker.tsx","styles/schedulerStyles.ts","components/Scheduler.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","getSuggestions","searchQuery","a","fetch","SEARCH_URL","results","json","mapSuggestions","map","r","textArray","region","push","city","country","text","join","placeType","name","LocationPicker","peoplePicker","useRef","useState","showSuggestions","setShowSuggestions","onResolveSuggestions","filter","length","then","data","docs","Promise","resolve","take","catch","e","getTextFromItem","item","pickerSuggestionsProps","noResultsFoundText","loadingText","showForceResolve","forceResolveText","resultsMaximumNumber","showRemoveButtons","suggestionsAvailableAlertText","componentRef","onInputChange","input","resolveDelay","inputProps","placeholder","removeButtonAriaLabel","onRenderItem","resource","Stack","styles","root","background","margin","maxHeight","Text","onRenderSuggestionsItem","itemProps","horizontal","borderBottom","width","height","verticalAlign","horizontalAlign","fontSize","color","className","classes","picker","pickerCalloutProps","calloutWidth","hidden","border","borderRadius","containerStyles","backgroundColor","pickerContainerStyles","paddingLeft","appHeaderTextStyles","padding","schedulerTextStyles","paddingTop","fontWeight","pickerLabelTextStyles","paddingBottom","Scheduler","Footer","Link","href","underline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7734f483.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"picker\":\"LocationPicker_picker__1snae\"};","\r\n\r\nconst SEARCH_URL = \"https://www.rentalcars.com/LocationAutocomplete.do?\";\r\nconst SEARCH_TERM_PARAM = \"term=\";\r\n\r\nconst getSuggestions = async (searchQuery: string) => {\r\n\r\n    try {\r\n\r\n        const results = await fetch(SEARCH_URL+\"&\"+SEARCH_TERM_PARAM+searchQuery);\r\n           \r\n        return results.json();\r\n\r\n    } catch(e) {\r\n        return {};\r\n    }\r\n\r\n}\r\n\r\nexport default getSuggestions;\r\n","\r\nimport map from 'lodash-es/map';\r\nimport { LocationPickerSchema } from '../schema/LocationPickerSchema';\r\n\r\nconst mapSuggestions = (results): LocationPickerSchema[] => {\r\n\r\n    return map(results, r => {\r\n\r\n        \r\n        let textArray: string[] = [];\r\n        !!r?.region && textArray.push(r?.region);\r\n        !!r?.city && textArray.push(r?.city);\r\n        !!r?.country && textArray.push(r?.country);\r\n        \r\n        return {\r\n            text: textArray.join(),\r\n            placeType: r?.placeType,\r\n            region: r?.region || r?.name || '',\r\n            city: r?.city,\r\n            country: r?.country,\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport default mapSuggestions;","import classes from './LocationPicker.module.scss';\r\nimport getSuggestions from '../utils/getSuggestions';\r\nimport mapSuggestions from '../utils/mapSuggestions';\r\nimport React, { useRef, useState } from 'react';\r\nimport take from 'lodash-es/take';\r\nimport { IPersonaProps } from '@fluentui/react/lib/Persona';\r\nimport { LocationPickerSchema } from '../schema/LocationPickerSchema';\r\nimport { Stack } from '@fluentui/react/lib/Stack';\r\nimport { Text } from '@fluentui/react/lib/Text';\r\nimport {\r\n    IBasePickerSuggestionsProps,\r\n    NormalPeoplePickerBase,\r\n    IPickerItemProps,\r\n} from '@fluentui/react/lib/Pickers';\r\n\r\n\r\nconst LocationPicker = () => {\r\n\r\n    const peoplePicker = useRef<NormalPeoplePickerBase>(null);\r\n    const [showSuggestions, setShowSuggestions] = useState<boolean>(false);\r\n\r\n    \r\n    const getTextFromItem = (item: LocationPickerSchema) => (item.region || '');\r\n\r\n    const onResolveSuggestions = (filter: string): Promise<LocationPickerSchema[]> => {\r\n\r\n        if(filter.length > 1) {\r\n            return getSuggestions(filter).then(data => {\r\n                if(!!data?.results?.docs) {\r\n                    return Promise.resolve(mapSuggestions(take(data.results.docs,6)));\r\n                }\r\n                return Promise.resolve([]);\r\n            }).catch(e => { return Promise.resolve([]) });\r\n        }\r\n        return Promise.resolve([]); \r\n    }\r\n\r\n    const onInputChange = (input: string) => {\r\n        setShowSuggestions(input.length > 1);\r\n        return input;\r\n    };\r\n\r\n    const suggestionProps: IBasePickerSuggestionsProps = {\r\n        noResultsFoundText: 'No results found',\r\n        loadingText: 'Loading...',\r\n        showForceResolve: () => false,\r\n        forceResolveText: '',\r\n        resultsMaximumNumber: 6,\r\n        showRemoveButtons: false,\r\n        suggestionsAvailableAlertText: \"Location suggestions available\"\r\n    };\r\n\r\n    const onRenderItem = (resource: IPickerItemProps<IPersonaProps>): JSX.Element => {\r\n\r\n        return (\r\n            <Stack styles={{ root: { background: 'transparent', margin: '1px 2px',maxHeight: '35px',}}}>\r\n                <Text>\r\n                    {resource.item.text}\r\n                </Text>\r\n            </Stack>\r\n        );\r\n    }\r\n\r\n    const onRenderSuggestionsItem = (itemProps: LocationPickerSchema): JSX.Element => {\r\n\r\n        return (\r\n            <Stack horizontal={true} styles={{ root: { borderBottom: '1px solid #d2d0ce', width: '100%'}}}>\r\n                <Stack styles={{ root: { height: 40, width: 60}}} verticalAlign=\"center\">\r\n                    <Text>{itemProps.placeType}</Text>\r\n                </Stack>\r\n                <Stack styles={{ root: { height: 40}}} horizontalAlign=\"start\">\r\n                    <Text styles={{root: {fontSize: 14}}}>{itemProps.region}</Text>\r\n                    <Text styles={{ root: { fontSize: 10, color: '#797775'}}}>{itemProps.text}</Text>\r\n                </Stack>\r\n            </Stack>\r\n        )\r\n    }\r\n    return (\r\n        <NormalPeoplePickerBase\r\n            onResolveSuggestions={onResolveSuggestions}\r\n            getTextFromItem={getTextFromItem}\r\n            pickerSuggestionsProps={suggestionProps}\r\n            componentRef={peoplePicker}\r\n            onInputChange={onInputChange}\r\n            resolveDelay={300}\r\n            inputProps={{\r\n                'aria-label': 'Pick-up location search box',\r\n                placeholder: 'city, airport, station, region, district...',\r\n            }}\r\n            removeButtonAriaLabel='Remove'\r\n            onRenderItem={onRenderItem}\r\n            onRenderSuggestionsItem={onRenderSuggestionsItem}\r\n            className={classes.picker}\r\n            pickerCalloutProps={{\r\n                calloutWidth: 300,\r\n                hidden: !showSuggestions,\r\n                styles: {\r\n                    root: {\r\n                        border: '1px solif #000',\r\n                        borderRadius: 4\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default LocationPicker;","import { IStackStyles } from '@fluentui/react/lib/Stack';\r\nimport { ITextStyles } from '@fluentui/react/lib/Text';\r\n\r\nexport const containerStyles: IStackStyles = {\r\n    root: {\r\n        backgroundColor: '#1b7ccd',\r\n        height: 300\r\n    }\r\n}\r\nexport const pickerContainerStyles: IStackStyles = {\r\n    root: {\r\n        backgroundColor: '#ffb700',\r\n        height: 180,\r\n        borderRadius: 10,\r\n        border: '1px solid #ffb700',\r\n        width: '80%',\r\n        paddingLeft: 50\r\n    }\r\n}\r\n\r\nexport const appHeaderTextStyles: ITextStyles = {\r\n    root: { \r\n        color: '#fff', \r\n        fontSize: 36, \r\n        padding: 10\r\n    }\r\n}\r\n\r\nexport const schedulerTextStyles: ITextStyles = {\r\n    root: { \r\n        fontSize: 20, \r\n        paddingTop: 10, \r\n        fontWeight: 600\r\n    }\r\n}\r\n\r\nexport const pickerLabelTextStyles: ITextStyles = {\r\n    root: { \r\n        fontSize: 16, \r\n        paddingTop: 10, \r\n        paddingBottom: 5, \r\n        color: '#605E5C'\r\n    }\r\n}","import LocationPicker from './LocationPicker';\r\nimport React from 'react';\r\nimport {\r\n    appHeaderTextStyles,\r\n    containerStyles,\r\n    pickerContainerStyles,\r\n    pickerLabelTextStyles,\r\n    schedulerTextStyles\r\n    } from '../styles/schedulerStyles';\r\nimport { Stack } from '@fluentui/react/lib/Stack';\r\nimport { Text } from '@fluentui/react/lib/Text';\r\n\r\nconst Scheduler = () => {\r\n\r\n    return (\r\n        <Stack styles={containerStyles} horizontalAlign=\"center\">\r\n            <Text styles={appHeaderTextStyles}>Car Rentals</Text>\r\n            <Stack styles={pickerContainerStyles}>\r\n                <Text styles={schedulerTextStyles}>Where are you going?</Text>\r\n                <Text styles={pickerLabelTextStyles}>Pick-up Location</Text>\r\n                <Stack styles={{ root: {width: '70%'}}}>\r\n                    <LocationPicker />\r\n                </Stack>\r\n            </Stack>\r\n\r\n        </Stack>\r\n    )\r\n\r\n}\r\n\r\nexport default Scheduler;\r\n","\r\nimport { Stack } from '@fluentui/react/lib/Stack';\r\nimport React from 'react';\r\nimport { Text } from '@fluentui/react/lib/Text';\r\nimport { Link } from '@fluentui/react/lib/Link';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <Stack styles={{ root: { width: '100%', height: 50, backgroundColor: '#1b7ccd'}}} horizontal={true} horizontalAlign=\"center\">\r\n            <Text styles={{ root: {fontWeight: 600, fontSize: 16, color: '#fff'}}}>Created using </Text>&nbsp;\r\n            <Link href=\"https://www.rentalcars.com/\" underline={true} styles={{ root: { fontWeight: 600, fontSize: 16, color: '#fff'}}}>rentalcars.com</Link>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Scheduler from './components/Scheduler';\nimport { Stack } from '@fluentui/react/lib/Stack';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <Stack verticalAlign=\"space-between\" styles={{ root: { height: '100%'}}}>\n      <Scheduler />\n      <Footer />\n    </Stack>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}